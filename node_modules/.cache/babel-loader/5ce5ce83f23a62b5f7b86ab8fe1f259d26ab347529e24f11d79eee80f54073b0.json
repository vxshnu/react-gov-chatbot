{"ast":null,"code":"var _jsxFileName = \"E:\\\\Gov Chatbot\\\\gov-ui\\\\src\\\\components\\\\ChatBox.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './ChatBox.css';\nimport axios from 'axios';\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBox = ({\n  messages,\n  addFeedback\n}) => {\n  _s();\n  const chatContainerRef = useRef(null);\n  const [feedbackIndex, setFeedbackIndex] = useState(null);\n  useEffect(() => {\n    chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n  }, [messages]);\n  const toggleFeedbackInput = index => {\n    setFeedbackIndex(feedbackIndex === index ? null : index);\n  };\n  const handleFeedbackChange = (index, event) => {\n    const {\n      value\n    } = event.target;\n    addFeedback(index, value); // Update feedback for the message at index\n  };\n  const handleKeyPress = (index, event) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      const {\n        value\n      } = event.target;\n      addFeedback(index, value); // Save feedback when Enter is pressed\n      sendFeedbackToServer(index, value); // Send feedback to the server\n      setFeedbackIndex(null); // Close the feedback input\n    }\n  };\n  const sendFeedbackToServer = async (index, feedback) => {\n    try {\n      const response = await axios.post('http://localhost:5000/feedback', {\n        feedback,\n        index\n      });\n      console.log('Feedback response:', response.data);\n      // Optionally, you can add logic here to update the UI with the feedback response\n    } catch (error) {\n      console.error('Error sending feedback:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: chatContainerRef,\n    className: \"chat-box\",\n    children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-message ${msg.sender}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: msg.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), msg.sender === 'bot' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback-container\",\n        children: feedbackIndex === index ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback-input\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Provide feedback...\",\n            value: msg.feedback || '',\n            onChange: e => handleFeedbackChange(index, e),\n            onKeyPress: e => handleKeyPress(index, e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"feedback-button\",\n          onClick: () => toggleFeedbackInput(index),\n          children: \"Provide Feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBox, \"iciVrHvoY4XG8sIsrGz5TzXEreY=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useEffect","useRef","useState","axios","FileDownloadIcon","jsxDEV","_jsxDEV","ChatBox","messages","addFeedback","_s","chatContainerRef","feedbackIndex","setFeedbackIndex","current","scrollTop","scrollHeight","toggleFeedbackInput","index","handleFeedbackChange","event","value","target","handleKeyPress","key","preventDefault","sendFeedbackToServer","feedback","response","post","console","log","data","error","ref","className","children","map","msg","sender","text","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","onKeyPress","onClick","_c","$RefreshReg$"],"sources":["E:/Gov Chatbot/gov-ui/src/components/ChatBox.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport './ChatBox.css';\r\nimport axios from 'axios';\r\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\r\n\r\nconst ChatBox = ({ messages, addFeedback }) => {\r\n  const chatContainerRef = useRef(null);\r\n  const [feedbackIndex, setFeedbackIndex] = useState(null);\r\n\r\n  useEffect(() => {\r\n    chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\r\n  }, [messages]);\r\n\r\n  const toggleFeedbackInput = (index) => {\r\n    setFeedbackIndex(feedbackIndex === index ? null : index);\r\n  };\r\n\r\n  const handleFeedbackChange = (index, event) => {\r\n    const { value } = event.target;\r\n    addFeedback(index, value); // Update feedback for the message at index\r\n  };\r\n\r\n  const handleKeyPress = (index, event) => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault();\r\n      const { value } = event.target;\r\n      addFeedback(index, value); // Save feedback when Enter is pressed\r\n      sendFeedbackToServer(index, value); // Send feedback to the server\r\n      setFeedbackIndex(null); // Close the feedback input\r\n    }\r\n  };\r\n\r\n  const sendFeedbackToServer = async (index, feedback) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/feedback', {\r\n        feedback,\r\n        index\r\n      });\r\n      console.log('Feedback response:', response.data);\r\n      // Optionally, you can add logic here to update the UI with the feedback response\r\n    } catch (error) {\r\n      console.error('Error sending feedback:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div ref={chatContainerRef} className=\"chat-box\">\r\n      {messages.map((msg, index) => (\r\n        <div key={index} className={`chat-message ${msg.sender}`}>\r\n          <div className={`message ${msg.sender}`}>{msg.text}</div>\r\n          {msg.sender === 'bot' && (\r\n            <div className=\"feedback-container\">\r\n              {feedbackIndex === index ? (\r\n                <div className=\"feedback-input\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Provide feedback...\"\r\n                    value={msg.feedback || ''}\r\n                    onChange={(e) => handleFeedbackChange(index, e)}\r\n                    onKeyPress={(e) => handleKeyPress(index, e)}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <button className=\"feedback-button\" onClick={() => toggleFeedbackInput(index)}>\r\n                  Provide Feedback\r\n                </button>\r\n              )}\r\n                   \r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBox;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}