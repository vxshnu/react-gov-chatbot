{"ast":null,"code":"var _jsxFileName = \"E:\\\\Gov Chatbot\\\\gov-ui\\\\src\\\\components\\\\ChatBox.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './ChatBox.css';\nimport axios from 'axios';\nimport ThumbsUpDownIcon from '@mui/icons-material/ThumbsUpDown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBox = ({\n  messages,\n  addFeedback\n}) => {\n  _s();\n  const chatContainerRef = useRef(null);\n  const [feedbackIndex, setFeedbackIndex] = useState(null);\n  const [feedbackText, setFeedbackText] = useState('');\n  const [showPopup, setShowPopup] = useState(false);\n  useEffect(() => {\n    chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n  }, [messages]);\n  const toggleFeedbackInput = index => {\n    setFeedbackIndex(feedbackIndex === index ? null : index);\n    setFeedbackText(''); // Clear the feedback input text when toggling\n  };\n  const handleFeedbackChange = event => {\n    setFeedbackText(event.target.value);\n  };\n  const handleKeyPress = (index, event) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      const {\n        value\n      } = event.target;\n      addFeedback(index, value); // Save feedback when Enter is pressed\n      sendFeedbackToServer(index, value); // Send feedback to the server\n      setFeedbackText(''); // Clear the feedback input text\n      setFeedbackIndex(null); // Close the feedback input\n    }\n  };\n  const sendFeedbackToServer = async (index, feedback) => {\n    try {\n      const response = await axios.post('http://localhost:5000/feedback', {\n        feedback,\n        index\n      });\n      console.log('Feedback response:', response.data);\n      // Optionally, you can add logic here to update the UI with the feedback response\n      setShowPopup(true); // Show the success popup\n      setTimeout(() => {\n        setShowPopup(false); // Hide the popup after 3 seconds\n      }, 3000);\n    } catch (error) {\n      console.error('Error sending feedback:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: chatContainerRef,\n    className: \"chat-box\",\n    children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-message ${msg.sender}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: msg.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), msg.sender === 'bot' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback-container\",\n        children: feedbackIndex === index ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback-input\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Provide feedback...\",\n            value: feedbackText,\n            onChange: handleFeedbackChange,\n            onKeyPress: e => handleKeyPress(index, e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"feedback-button\",\n          onClick: () => toggleFeedbackInput(index),\n          children: /*#__PURE__*/_jsxDEV(ThumbsUpDownIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: \"\\u0D28\\u0D3F\\u0D19\\u0D4D\\u0D19\\u0D33\\u0D41\\u0D1F\\u0D46 \\u0D05\\u0D2D\\u0D3F\\u0D2A\\u0D4D\\u0D30\\u0D3E\\u0D2F\\u0D24\\u0D4D\\u0D24\\u0D3F\\u0D28\\u0D4D \\u0D28\\u0D28\\u0D4D\\u0D26\\u0D3F!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBox, \"EoHiGI9XAe3YD3uGM0nhUuYyP8k=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useEffect","useRef","useState","axios","ThumbsUpDownIcon","jsxDEV","_jsxDEV","ChatBox","messages","addFeedback","_s","chatContainerRef","feedbackIndex","setFeedbackIndex","feedbackText","setFeedbackText","showPopup","setShowPopup","current","scrollTop","scrollHeight","toggleFeedbackInput","index","handleFeedbackChange","event","target","value","handleKeyPress","key","preventDefault","sendFeedbackToServer","feedback","response","post","console","log","data","setTimeout","error","ref","className","children","map","msg","sender","text","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onKeyPress","e","onClick","_c","$RefreshReg$"],"sources":["E:/Gov Chatbot/gov-ui/src/components/ChatBox.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport './ChatBox.css';\r\nimport axios from 'axios';\r\nimport ThumbsUpDownIcon from '@mui/icons-material/ThumbsUpDown';\r\n\r\nconst ChatBox = ({ messages, addFeedback }) => {\r\n  const chatContainerRef = useRef(null);\r\n  const [feedbackIndex, setFeedbackIndex] = useState(null);\r\n  const [feedbackText, setFeedbackText] = useState('');\r\n  const [showPopup, setShowPopup] = useState(false);\r\n\r\n  useEffect(() => {\r\n    chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\r\n  }, [messages]);\r\n\r\n  const toggleFeedbackInput = (index) => {\r\n    setFeedbackIndex(feedbackIndex === index ? null : index);\r\n    setFeedbackText(''); // Clear the feedback input text when toggling\r\n  };\r\n\r\n  const handleFeedbackChange = (event) => {\r\n    setFeedbackText(event.target.value);\r\n  };\r\n\r\n  const handleKeyPress = (index, event) => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault();\r\n      const { value } = event.target;\r\n      addFeedback(index, value); // Save feedback when Enter is pressed\r\n      sendFeedbackToServer(index, value); // Send feedback to the server\r\n      setFeedbackText(''); // Clear the feedback input text\r\n      setFeedbackIndex(null); // Close the feedback input\r\n    }\r\n  };\r\n\r\n  const sendFeedbackToServer = async (index, feedback) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/feedback', {\r\n        feedback,\r\n        index\r\n      });\r\n      console.log('Feedback response:', response.data);\r\n      // Optionally, you can add logic here to update the UI with the feedback response\r\n      setShowPopup(true); // Show the success popup\r\n      setTimeout(() => {\r\n        setShowPopup(false); // Hide the popup after 3 seconds\r\n      }, 3000);\r\n    } catch (error) {\r\n      console.error('Error sending feedback:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div ref={chatContainerRef} className=\"chat-box\">\r\n      {messages.map((msg, index) => (\r\n        <div key={index} className={`chat-message ${msg.sender}`}>\r\n          <div className={`message ${msg.sender}`}>{msg.text}</div>\r\n          {msg.sender === 'bot' && (\r\n            <div className=\"feedback-container\">\r\n              {feedbackIndex === index ? (\r\n                <div className=\"feedback-input\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Provide feedback...\"\r\n                    value={feedbackText}\r\n                    onChange={handleFeedbackChange}\r\n                    onKeyPress={(e) => handleKeyPress(index, e)}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <button className=\"feedback-button\" onClick={() => toggleFeedbackInput(index)}>\r\n                  <ThumbsUpDownIcon/>\r\n                </button>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n      {showPopup && (\r\n        <div className=\"popup\">\r\n          നിങ്ങളുടെ അഭിപ്രായത്തിന് നന്ദി!\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBox;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,eAAe;AACtB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,gBAAgB,MAAM,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,OAAO,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAMC,gBAAgB,GAAGV,MAAM,CAAC,IAAI,CAAC;EACrC,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEjDF,SAAS,CAAC,MAAM;IACdW,gBAAgB,CAACO,OAAO,CAACC,SAAS,GAAGR,gBAAgB,CAACO,OAAO,CAACE,YAAY;EAC5E,CAAC,EAAE,CAACZ,QAAQ,CAAC,CAAC;EAEd,MAAMa,mBAAmB,GAAIC,KAAK,IAAK;IACrCT,gBAAgB,CAACD,aAAa,KAAKU,KAAK,GAAG,IAAI,GAAGA,KAAK,CAAC;IACxDP,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;EACvB,CAAC;EAED,MAAMQ,oBAAoB,GAAIC,KAAK,IAAK;IACtCT,eAAe,CAACS,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,MAAMC,cAAc,GAAGA,CAACL,KAAK,EAAEE,KAAK,KAAK;IACvC,IAAIA,KAAK,CAACI,GAAG,KAAK,OAAO,EAAE;MACzBJ,KAAK,CAACK,cAAc,CAAC,CAAC;MACtB,MAAM;QAAEH;MAAM,CAAC,GAAGF,KAAK,CAACC,MAAM;MAC9BhB,WAAW,CAACa,KAAK,EAAEI,KAAK,CAAC,CAAC,CAAC;MAC3BI,oBAAoB,CAACR,KAAK,EAAEI,KAAK,CAAC,CAAC,CAAC;MACpCX,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;MACrBF,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1B;EACF,CAAC;EAED,MAAMiB,oBAAoB,GAAG,MAAAA,CAAOR,KAAK,EAAES,QAAQ,KAAK;IACtD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAM7B,KAAK,CAAC8B,IAAI,CAAC,gCAAgC,EAAE;QAClEF,QAAQ;QACRT;MACF,CAAC,CAAC;MACFY,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEH,QAAQ,CAACI,IAAI,CAAC;MAChD;MACAnB,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;MACpBoB,UAAU,CAAC,MAAM;QACfpB,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;MACvB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC,OAAOqB,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EAED,oBACEhC,OAAA;IAAKiC,GAAG,EAAE5B,gBAAiB;IAAC6B,SAAS,EAAC,UAAU;IAAAC,QAAA,GAC7CjC,QAAQ,CAACkC,GAAG,CAAC,CAACC,GAAG,EAAErB,KAAK,kBACvBhB,OAAA;MAAiBkC,SAAS,EAAE,gBAAgBG,GAAG,CAACC,MAAM,EAAG;MAAAH,QAAA,gBACvDnC,OAAA;QAAKkC,SAAS,EAAE,WAAWG,GAAG,CAACC,MAAM,EAAG;QAAAH,QAAA,EAAEE,GAAG,CAACE;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EACxDN,GAAG,CAACC,MAAM,KAAK,KAAK,iBACnBtC,OAAA;QAAKkC,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAChC7B,aAAa,KAAKU,KAAK,gBACtBhB,OAAA;UAAKkC,SAAS,EAAC,gBAAgB;UAAAC,QAAA,eAC7BnC,OAAA;YACE4C,IAAI,EAAC,MAAM;YACXC,WAAW,EAAC,qBAAqB;YACjCzB,KAAK,EAAEZ,YAAa;YACpBsC,QAAQ,EAAE7B,oBAAqB;YAC/B8B,UAAU,EAAGC,CAAC,IAAK3B,cAAc,CAACL,KAAK,EAAEgC,CAAC;UAAE;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,gBAEN3C,OAAA;UAAQkC,SAAS,EAAC,iBAAiB;UAACe,OAAO,EAAEA,CAAA,KAAMlC,mBAAmB,CAACC,KAAK,CAAE;UAAAmB,QAAA,eAC5EnC,OAAA,CAACF,gBAAgB;YAAA0C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb;MACT;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACN;IAAA,GApBO3B,KAAK;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAqBV,CACN,CAAC,EACDjC,SAAS,iBACRV,OAAA;MAAKkC,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAEvB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACvC,EAAA,CAhFIH,OAAO;AAAAiD,EAAA,GAAPjD,OAAO;AAkFb,eAAeA,OAAO;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}