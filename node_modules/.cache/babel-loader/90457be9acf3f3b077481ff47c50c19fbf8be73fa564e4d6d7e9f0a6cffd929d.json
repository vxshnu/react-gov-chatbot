{"ast":null,"code":"var _jsxFileName = \"E:\\\\Gov Chatbot\\\\gov-ui\\\\src\\\\components\\\\ChatInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ChatInput.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInput = ({\n  addMessage,\n  onSend,\n  triggerPDFFetch\n}) => {\n  _s();\n  const [input, setInput] = useState('');\n  const [isSending, setIsSending] = useState(false);\n  const handleSend = async () => {\n    if (input.trim()) {\n      addMessage(input, 'user');\n      setIsSending(true);\n      const messageToSend = input;\n      setInput('');\n      try {\n        if (messageToSend.trim().toLowerCase() === 'yes') {\n          triggerPDFFetch(); // Call the function to fetch PDFs\n          addMessage('Fetching PDFs...', 'bot'); // Notify user about PDF fetch\n        } else {\n          const response = await fetch('http://127.0.0.1:5000/answer', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              question: messageToSend\n            })\n          });\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          const data = await response.json();\n          addMessage(data.answer, 'bot');\n        }\n      } catch (error) {\n        console.error('There was a problem with the fetch operation:', error);\n      }\n      setIsSending(false);\n      onSend(); // Call the onSend function when the message is sent\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      onKeyDown: e => e.key === 'Enter' && !isSending && handleSend(),\n      placeholder: \"\\u0D12\\u0D30\\u0D41 \\u0D38\\u0D28\\u0D4D\\u0D26\\u0D47\\u0D36\\u0D02 \\u0D1F\\u0D48\\u0D2A\\u0D4D\\u0D2A\\u0D4D \\u0D1A\\u0D46\\u0D2F\\u0D4D\\u0D2F\\u0D41\\u0D15...\",\n      \"aria-label\": \"Type your message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      disabled: isSending,\n      \"aria-label\": \"Send message\",\n      children: isSending ? 'Sending...' : 'അയയ്ക്കുക'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInput, \"JoX4E1FCBnrQgA9p0LmawcDzIFs=\");\n_c = ChatInput;\nexport default ChatInput;\nvar _c;\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ChatInput","addMessage","onSend","triggerPDFFetch","_s","input","setInput","isSending","setIsSending","handleSend","trim","messageToSend","toLowerCase","response","fetch","method","headers","body","JSON","stringify","question","ok","Error","data","json","answer","error","console","className","children","type","value","onChange","e","target","onKeyDown","key","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/Gov Chatbot/gov-ui/src/components/ChatInput.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './ChatInput.css';\r\nimport axios from 'axios';\r\n\r\nconst ChatInput = ({ addMessage, onSend, triggerPDFFetch }) => {\r\n  const [input, setInput] = useState('');\r\n  const [isSending, setIsSending] = useState(false);\r\n\r\n  const handleSend = async () => {\r\n    if (input.trim()) {\r\n      addMessage(input, 'user');\r\n      setIsSending(true);\r\n      const messageToSend = input;\r\n      setInput('');\r\n\r\n      try {\r\n        if (messageToSend.trim().toLowerCase() === 'yes') {\r\n          triggerPDFFetch(); // Call the function to fetch PDFs\r\n          addMessage('Fetching PDFs...', 'bot'); // Notify user about PDF fetch\r\n        } else {\r\n          const response = await fetch('http://127.0.0.1:5000/answer', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ question: messageToSend })\r\n          });\r\n\r\n          if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n          }\r\n\r\n          const data = await response.json();\r\n          addMessage(data.answer, 'bot');\r\n        }\r\n      } catch (error) {\r\n        console.error('There was a problem with the fetch operation:', error);\r\n      }\r\n\r\n      setIsSending(false);\r\n      onSend(); // Call the onSend function when the message is sent\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-input\">\r\n      <input\r\n        type=\"text\"\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n        onKeyDown={(e) => e.key === 'Enter' && !isSending && handleSend()}\r\n        placeholder=\"ഒരു സന്ദേശം ടൈപ്പ് ചെയ്യുക...\"\r\n        aria-label=\"Type your message\"\r\n      />\r\n      <button onClick={handleSend} disabled={isSending} aria-label=\"Send message\">\r\n        {isSending ? 'Sending...' : 'അയയ്ക്കുക'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInput;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,iBAAiB;AACxB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC,UAAU;EAAEC,MAAM;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAC7D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAIJ,KAAK,CAACK,IAAI,CAAC,CAAC,EAAE;MAChBT,UAAU,CAACI,KAAK,EAAE,MAAM,CAAC;MACzBG,YAAY,CAAC,IAAI,CAAC;MAClB,MAAMG,aAAa,GAAGN,KAAK;MAC3BC,QAAQ,CAAC,EAAE,CAAC;MAEZ,IAAI;QACF,IAAIK,aAAa,CAACD,IAAI,CAAC,CAAC,CAACE,WAAW,CAAC,CAAC,KAAK,KAAK,EAAE;UAChDT,eAAe,CAAC,CAAC,CAAC,CAAC;UACnBF,UAAU,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC,CAAC;QACzC,CAAC,MAAM;UACL,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;YAC3DC,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cAAE,cAAc,EAAE;YAAmB,CAAC;YAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;cAAEC,QAAQ,EAAET;YAAc,CAAC;UAClD,CAAC,CAAC;UAEF,IAAI,CAACE,QAAQ,CAACQ,EAAE,EAAE;YAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;UAChD;UAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;UAClCvB,UAAU,CAACsB,IAAI,CAACE,MAAM,EAAE,KAAK,CAAC;QAChC;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;MACvE;MAEAlB,YAAY,CAAC,KAAK,CAAC;MACnBN,MAAM,CAAC,CAAC,CAAC,CAAC;IACZ;EACF,CAAC;EAED,oBACEH,OAAA;IAAK6B,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzB9B,OAAA;MACE+B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAE1B,KAAM;MACb2B,QAAQ,EAAGC,CAAC,IAAK3B,QAAQ,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1CI,SAAS,EAAGF,CAAC,IAAKA,CAAC,CAACG,GAAG,KAAK,OAAO,IAAI,CAAC7B,SAAS,IAAIE,UAAU,CAAC,CAAE;MAClE4B,WAAW,EAAC,kJAA+B;MAC3C,cAAW;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACF1C,OAAA;MAAQ2C,OAAO,EAAEjC,UAAW;MAACkC,QAAQ,EAAEpC,SAAU;MAAC,cAAW,cAAc;MAAAsB,QAAA,EACxEtB,SAAS,GAAG,YAAY,GAAG;IAAW;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACrC,EAAA,CArDIJ,SAAS;AAAA4C,EAAA,GAAT5C,SAAS;AAuDf,eAAeA,SAAS;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}