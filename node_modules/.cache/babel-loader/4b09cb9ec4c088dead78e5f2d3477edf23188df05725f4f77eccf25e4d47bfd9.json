{"ast":null,"code":"var _jsxFileName = \"E:\\\\Gov Chatbot\\\\gov-ui\\\\src\\\\components\\\\PdfDownloader.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PDFList = () => {\n  _s();\n  const [pdfFiles, setPdfFiles] = useState([]);\n  useEffect(() => {\n    fetchPDFs();\n  }, []);\n  const fetchPDFs = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/get_pdfs');\n      setPdfFiles(response.data);\n    } catch (error) {\n      console.error('Error fetching PDFs:', error);\n    }\n  };\n  const handleDownload = async filename => {\n    try {\n      const response = await axios.get(`http://localhost:5000/get_blob`, {\n        responseType: 'blob' //Ensure responseType is set to 'blob' to handle binary data\n      });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', filename);\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      window.URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error(`Error downloading PDF ${filename}:`, error);\n      //Optionally, provide user feedback about the error\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pdf-list-container\",\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"PDF Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(PDFList, \"H9bKNyTv8p6BRnV3qYWZ4Wr1HL0=\");\n_c = PDFList;\nexport default PDFList;\nvar _c;\n$RefreshReg$(_c, \"PDFList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PDFList","_s","pdfFiles","setPdfFiles","fetchPDFs","response","get","data","error","console","handleDownload","filename","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Gov Chatbot/gov-ui/src/components/PdfDownloader.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst PDFList = () => {\r\n  const [pdfFiles, setPdfFiles] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchPDFs();\r\n  }, []);\r\n\r\n  const fetchPDFs = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/get_pdfs');\r\n      setPdfFiles(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching PDFs:', error);\r\n    }\r\n  };\r\n\r\n  const handleDownload = async (filename) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/get_blob`, {\r\n        responseType: 'blob'  //Ensure responseType is set to 'blob' to handle binary data\r\n      });\r\n\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', filename);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      window.URL.revokeObjectURL(url);\r\n    } catch (error) { \r\n      console.error(`Error downloading PDF ${filename}:`, error);\r\n      //Optionally, provide user feedback about the error\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"pdf-list-container\">\r\n      <h2>PDF Files</h2>\r\n      {}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PDFList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdQ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,gCAAgC,CAAC;MAClEH,WAAW,CAACE,QAAQ,CAACE,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAME,cAAc,GAAG,MAAOC,QAAQ,IAAK;IACzC,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,gCAAgC,EAAE;QACjEM,YAAY,EAAE,MAAM,CAAE;MACxB,CAAC,CAAC;MAEF,MAAMC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAAC,IAAIC,IAAI,CAAC,CAACZ,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;MAEjE,MAAMW,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACxCF,IAAI,CAACG,IAAI,GAAGR,GAAG;MACfK,IAAI,CAACI,YAAY,CAAC,UAAU,EAAEX,QAAQ,CAAC;MACvCQ,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;MAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;MACZN,QAAQ,CAACI,IAAI,CAACG,WAAW,CAACR,IAAI,CAAC;MAC/BJ,MAAM,CAACC,GAAG,CAACY,eAAe,CAACd,GAAG,CAAC;IACjC,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyBG,QAAQ,GAAG,EAAEH,KAAK,CAAC;MAC1D;IACF;EACF,CAAC;EAED,oBACET,OAAA;IAAK6B,SAAS,EAAC,oBAAoB;IAAAC,QAAA,eACjC9B,OAAA;MAAA8B,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEf,CAAC;AAEV,CAAC;AAAChC,EAAA,CA3CID,OAAO;AAAAkC,EAAA,GAAPlC,OAAO;AA6Cb,eAAeA,OAAO;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}