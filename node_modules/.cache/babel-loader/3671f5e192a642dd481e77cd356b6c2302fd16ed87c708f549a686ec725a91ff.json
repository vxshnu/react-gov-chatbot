{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import'./ChatBox.css';import axios from'axios';import ThumbsUpDownIcon from'@mui/icons-material/ThumbsUpDown';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ChatBox=_ref=>{let{messages,addFeedback}=_ref;const chatContainerRef=useRef(null);const[feedbackIndex,setFeedbackIndex]=useState(null);const[feedbackText,setFeedbackText]=useState('');const[showPopup,setShowPopup]=useState(false);useEffect(()=>{chatContainerRef.current.scrollTop=chatContainerRef.current.scrollHeight;},[messages]);const toggleFeedbackInput=index=>{setFeedbackIndex(feedbackIndex===index?null:index);setFeedbackText('');// Clear the feedback input text when toggling\n};const handleFeedbackChange=event=>{setFeedbackText(event.target.value);};const handleKeyPress=(index,event)=>{if(event.key==='Enter'){event.preventDefault();const{value}=event.target;addFeedback(index,value);// Save feedback when Enter is pressed\nsendFeedbackToServer(index,value);// Send feedback to the server\nsetFeedbackText('');// Clear the feedback input text\nsetFeedbackIndex(null);// Close the feedback input\n}};const sendFeedbackToServer=async(index,feedback)=>{try{const response=await axios.post('http://localhost:5000/feedback',{feedback,index});console.log('Feedback response:',response.data);// Optionally, you can add logic here to update the UI with the feedback response\nsetShowPopup(true);// Show the success popup\nsetTimeout(()=>{setShowPopup(false);// Hide the popup after 3 seconds\n},3000);}catch(error){console.error('Error sending feedback:',error);}};return/*#__PURE__*/_jsxs(\"div\",{ref:chatContainerRef,className:\"chat-box\",children:[messages.map((msg,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"chat-message \".concat(msg.sender),children:[/*#__PURE__*/_jsx(\"div\",{className:\"message \".concat(msg.sender),children:msg.text}),msg.sender==='bot'&&/*#__PURE__*/_jsx(\"div\",{className:\"feedback-container\",children:feedbackIndex===index?/*#__PURE__*/_jsx(\"div\",{className:\"feedback-input\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Provide feedback...\",value:feedbackText,onChange:handleFeedbackChange,onKeyPress:e=>handleKeyPress(index,e)})}):/*#__PURE__*/_jsx(\"button\",{className:\"feedback-button\",onClick:()=>toggleFeedbackInput(index),children:/*#__PURE__*/_jsx(ThumbsUpDownIcon,{})})})]},index)),showPopup&&/*#__PURE__*/_jsx(\"div\",{className:\"popup\",children:\"\\u0D28\\u0D3F\\u0D19\\u0D4D\\u0D19\\u0D33\\u0D41\\u0D1F\\u0D46 \\u0D05\\u0D2D\\u0D3F\\u0D2A\\u0D4D\\u0D30\\u0D3E\\u0D2F\\u0D24\\u0D4D\\u0D24\\u0D3F\\u0D28\\u0D4D \\u0D28\\u0D28\\u0D4D\\u0D26\\u0D3F!\"})]});};export default ChatBox;","map":{"version":3,"names":["React","useEffect","useRef","useState","axios","ThumbsUpDownIcon","jsx","_jsx","jsxs","_jsxs","ChatBox","_ref","messages","addFeedback","chatContainerRef","feedbackIndex","setFeedbackIndex","feedbackText","setFeedbackText","showPopup","setShowPopup","current","scrollTop","scrollHeight","toggleFeedbackInput","index","handleFeedbackChange","event","target","value","handleKeyPress","key","preventDefault","sendFeedbackToServer","feedback","response","post","console","log","data","setTimeout","error","ref","className","children","map","msg","concat","sender","text","type","placeholder","onChange","onKeyPress","e","onClick"],"sources":["E:/Snippets/gov-react/src/components/ChatBox.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport './ChatBox.css';\r\nimport axios from 'axios';\r\nimport ThumbsUpDownIcon from '@mui/icons-material/ThumbsUpDown';\r\n\r\nconst ChatBox = ({ messages, addFeedback }) => {\r\n  const chatContainerRef = useRef(null);\r\n  const [feedbackIndex, setFeedbackIndex] = useState(null);\r\n  const [feedbackText, setFeedbackText] = useState('');\r\n  const [showPopup, setShowPopup] = useState(false);\r\n\r\n  useEffect(() => {\r\n    chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\r\n  }, [messages]);\r\n\r\n  const toggleFeedbackInput = (index) => {\r\n    setFeedbackIndex(feedbackIndex === index ? null : index);\r\n    setFeedbackText(''); // Clear the feedback input text when toggling\r\n  };\r\n\r\n  const handleFeedbackChange = (event) => {\r\n    setFeedbackText(event.target.value);\r\n  };\r\n\r\n  const handleKeyPress = (index, event) => {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault();\r\n      const { value } = event.target;\r\n      addFeedback(index, value); // Save feedback when Enter is pressed\r\n      sendFeedbackToServer(index, value); // Send feedback to the server\r\n      setFeedbackText(''); // Clear the feedback input text\r\n      setFeedbackIndex(null); // Close the feedback input\r\n    }\r\n  };\r\n\r\n  const sendFeedbackToServer = async (index, feedback) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/feedback', {\r\n        feedback,\r\n        index\r\n      });\r\n      console.log('Feedback response:', response.data);\r\n      // Optionally, you can add logic here to update the UI with the feedback response\r\n      setShowPopup(true); // Show the success popup\r\n      setTimeout(() => {\r\n        setShowPopup(false); // Hide the popup after 3 seconds\r\n      }, 3000);\r\n    } catch (error) {\r\n      console.error('Error sending feedback:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div ref={chatContainerRef} className=\"chat-box\">\r\n      {messages.map((msg, index) => (\r\n        <div key={index} className={`chat-message ${msg.sender}`}>\r\n          <div className={`message ${msg.sender}`}>{msg.text}</div>\r\n          {msg.sender === 'bot' && (\r\n            <div className=\"feedback-container\">\r\n              {feedbackIndex === index ? (\r\n                <div className=\"feedback-input\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Provide feedback...\"\r\n                    value={feedbackText}\r\n                    onChange={handleFeedbackChange}\r\n                    onKeyPress={(e) => handleKeyPress(index, e)}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <button className=\"feedback-button\" onClick={() => toggleFeedbackInput(index)}>\r\n                  <ThumbsUpDownIcon/>\r\n                </button>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n      {showPopup && (\r\n        <div className=\"popup\">\r\n          നിങ്ങളുടെ അഭിപ്രായത്തിന് നന്ദി!\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBox;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}