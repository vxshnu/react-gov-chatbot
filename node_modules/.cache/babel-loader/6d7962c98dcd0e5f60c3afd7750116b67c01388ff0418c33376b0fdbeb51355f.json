{"ast":null,"code":"var _jsxFileName = \"E:\\\\Gov Chatbot\\\\gov-ui\\\\src\\\\components\\\\PdfDownloader.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PDFList = () => {\n  const handleDownload = async filename => {\n    try {\n      const response = await axios.get(`http://localhost:5000/get_blob?filename=${filename}`, {\n        responseType: 'blob' // Ensure responseType is set to 'blob' to handle binary data\n      });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', filename);\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      window.URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error(`Error downloading PDF ${filename}:`, error);\n      // Optionally, provide user feedback about the error\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pdf-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"PDF Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDownload('document1.pdf'),\n          children: \"Download Document 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDownload('document2.pdf'),\n          children: \"Download Document 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = PDFList;\nexport default PDFList;\nvar _c;\n$RefreshReg$(_c, \"PDFList\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","PDFList","handleDownload","filename","response","get","responseType","url","window","URL","createObjectURL","Blob","data","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["E:/Gov Chatbot/gov-ui/src/components/PdfDownloader.js"],"sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst PDFList = () => {\r\n  const handleDownload = async (filename) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/get_blob?filename=${filename}`, {\r\n        responseType: 'blob'  // Ensure responseType is set to 'blob' to handle binary data\r\n      });\r\n\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', filename);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      window.URL.revokeObjectURL(url);\r\n    } catch (error) {\r\n      console.error(`Error downloading PDF ${filename}:`, error);\r\n      // Optionally, provide user feedback about the error\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"pdf-list-container\">\r\n      <h2>PDF Files</h2>\r\n      <ul>\r\n        <li>\r\n          <button onClick={() => handleDownload('document1.pdf')}>\r\n            Download Document 1\r\n          </button>\r\n        </li>\r\n        <li>\r\n          <button onClick={() => handleDownload('document2.pdf')}>\r\n            Download Document 2\r\n          </button>\r\n        </li>\r\n        {/* Add more buttons as needed for additional PDF files */}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PDFList;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EACpB,MAAMC,cAAc,GAAG,MAAOC,QAAQ,IAAK;IACzC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,2CAA2CF,QAAQ,EAAE,EAAE;QACtFG,YAAY,EAAE,MAAM,CAAE;MACxB,CAAC,CAAC;MAEF,MAAMC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAAC,IAAIC,IAAI,CAAC,CAACP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAAC;MAEjE,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACxCF,IAAI,CAACG,IAAI,GAAGT,GAAG;MACfM,IAAI,CAACI,YAAY,CAAC,UAAU,EAAEd,QAAQ,CAAC;MACvCW,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;MAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;MACZN,QAAQ,CAACI,IAAI,CAACG,WAAW,CAACR,IAAI,CAAC;MAC/BL,MAAM,CAACC,GAAG,CAACa,eAAe,CAACf,GAAG,CAAC;IACjC,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyBpB,QAAQ,GAAG,EAAEoB,KAAK,CAAC;MAC1D;IACF;EACF,CAAC;EAED,oBACEvB,OAAA;IAAKyB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjC1B,OAAA;MAAA0B,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB9B,OAAA;MAAA0B,QAAA,gBACE1B,OAAA;QAAA0B,QAAA,eACE1B,OAAA;UAAQ+B,OAAO,EAAEA,CAAA,KAAM7B,cAAc,CAAC,eAAe,CAAE;UAAAwB,QAAA,EAAC;QAExD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eACL9B,OAAA;QAAA0B,QAAA,eACE1B,OAAA;UAAQ+B,OAAO,EAAEA,CAAA,KAAM7B,cAAc,CAAC,eAAe,CAAE;UAAAwB,QAAA,EAAC;QAExD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACE,EAAA,GAxCI/B,OAAO;AA0Cb,eAAeA,OAAO;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}