{"ast":null,"code":"var _jsxFileName = \"E:\\\\Gov Chatbot\\\\gov-ui\\\\src\\\\components\\\\ChatInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ChatInput.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInput = ({\n  addMessage,\n  onSend\n}) => {\n  _s();\n  const [input, setInput] = useState('');\n  const [isSending, setIsSending] = useState(false);\n  const handleSend = async () => {\n    if (input.trim()) {\n      addMessage(input, 'user');\n      setIsSending(true);\n      const messageToSend = input;\n      setInput('');\n      try {\n        if (messageToSend.trim().toLowerCase() === 'yes') {\n          const response = await axios.get('http://localhost:5000/get_cert', {\n            responseType: 'blob' // Set responseType to 'blob' to receive binary data\n          });\n          if (!response.data) {\n            throw new Error('Empty response received');\n          }\n\n          // Create a blob URL for the received data\n          const blob = new Blob([response.data]);\n          const url = window.URL.createObjectURL(blob);\n\n          // Create a hidden anchor element\n          const link = document.createElement('a');\n          link.href = url;\n          link.setAttribute('download', 'certificate.pdf'); // Set desired filename here\n          link.style.display = 'none'; // Hide the anchor element\n          document.body.appendChild(link);\n\n          // Programmatically click the anchor to trigger download\n          link.click();\n\n          // Clean up: remove the anchor element and revoke the blob URL\n          document.body.removeChild(link);\n          window.URL.revokeObjectURL(url);\n\n          // Optionally, inform the user about the download action\n          addMessage('Certificate is downloading...', 'bot');\n        } else {\n          // Handle other messages or call your backend as needed\n          const response = await fetch('http://127.0.0.1:5000/answer', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              question: messageToSend\n            })\n          });\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          const data = await response.json();\n          addMessage(data.answer, 'bot');\n        }\n      } catch (error) {\n        console.error('There was a problem with the fetch operation:', error);\n      }\n      setIsSending(false);\n      onSend(); // Call the onSend function when the message is sent\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      onKeyDown: e => e.key === 'Enter' && !isSending && handleSend(),\n      placeholder: \"\\u0D12\\u0D30\\u0D41 \\u0D38\\u0D28\\u0D4D\\u0D26\\u0D47\\u0D36\\u0D02 \\u0D1F\\u0D48\\u0D2A\\u0D4D\\u0D2A\\u0D4D \\u0D1A\\u0D46\\u0D2F\\u0D4D\\u0D2F\\u0D41\\u0D15...\",\n      \"aria-label\": \"Type your message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      disabled: isSending,\n      \"aria-label\": \"Send message\",\n      children: isSending ? 'Sending...' : 'അയയ്ക്കുക'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInput, \"JoX4E1FCBnrQgA9p0LmawcDzIFs=\");\n_c = ChatInput;\nexport default ChatInput;\nvar _c;\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ChatInput","addMessage","onSend","_s","input","setInput","isSending","setIsSending","handleSend","trim","messageToSend","toLowerCase","response","get","responseType","data","Error","blob","Blob","url","window","URL","createObjectURL","link","document","createElement","href","setAttribute","style","display","body","appendChild","click","removeChild","revokeObjectURL","fetch","method","headers","JSON","stringify","question","ok","json","answer","error","console","className","children","type","value","onChange","e","target","onKeyDown","key","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/Gov Chatbot/gov-ui/src/components/ChatInput.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './ChatInput.css';\r\nimport axios from 'axios';\r\n\r\nconst ChatInput = ({ addMessage, onSend }) => {\r\n  const [input, setInput] = useState('');\r\n  const [isSending, setIsSending] = useState(false);\r\n\r\n  const handleSend = async () => {\r\n    if (input.trim()) {\r\n      addMessage(input, 'user');\r\n      setIsSending(true);\r\n      const messageToSend = input;\r\n      setInput('');\r\n\r\n      try {\r\n        if (messageToSend.trim().toLowerCase() === 'yes') {\r\n          const response = await axios.get('http://localhost:5000/get_cert', {\r\n            responseType: 'blob' // Set responseType to 'blob' to receive binary data\r\n          });\r\n\r\n          if (!response.data) {\r\n            throw new Error('Empty response received');\r\n          }\r\n\r\n          // Create a blob URL for the received data\r\n          const blob = new Blob([response.data]);\r\n          const url = window.URL.createObjectURL(blob);\r\n\r\n          // Create a hidden anchor element\r\n          const link = document.createElement('a');\r\n          link.href = url;\r\n          link.setAttribute('download', 'certificate.pdf'); // Set desired filename here\r\n          link.style.display = 'none'; // Hide the anchor element\r\n          document.body.appendChild(link);\r\n\r\n          // Programmatically click the anchor to trigger download\r\n          link.click();\r\n\r\n          // Clean up: remove the anchor element and revoke the blob URL\r\n          document.body.removeChild(link);\r\n          window.URL.revokeObjectURL(url);\r\n\r\n          // Optionally, inform the user about the download action\r\n          addMessage('Certificate is downloading...', 'bot');\r\n        } else {\r\n          // Handle other messages or call your backend as needed\r\n          const response = await fetch('http://127.0.0.1:5000/answer', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ question: messageToSend })\r\n          });\r\n\r\n          if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n          }\r\n\r\n          const data = await response.json();\r\n          addMessage(data.answer, 'bot');\r\n        }\r\n      } catch (error) {\r\n        console.error('There was a problem with the fetch operation:', error);\r\n      }\r\n\r\n      setIsSending(false);\r\n      onSend(); // Call the onSend function when the message is sent\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-input\">\r\n      <input\r\n        type=\"text\"\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n        onKeyDown={(e) => e.key === 'Enter' && !isSending && handleSend()}\r\n        placeholder=\"ഒരു സന്ദേശം ടൈപ്പ് ചെയ്യുക...\"\r\n        aria-label=\"Type your message\"\r\n      />\r\n      <button onClick={handleSend} disabled={isSending} aria-label=\"Send message\">\r\n        {isSending ? 'Sending...' : 'അയയ്ക്കുക'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInput;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}